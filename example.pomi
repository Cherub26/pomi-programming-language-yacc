/* 
 * Simple platformer game example in POMI language
 * This demonstrates the core features of the POMI language
 */
PRINT("Hello World");
// Define game constants
DEFINE SCREEN_WIDTH = 800;
DEFINE SCREEN_HEIGHT = 600;
DEFINE GRAVITY = 0.5;

// Create the game
CREATE myGame AS GAME {
    title = "My First Platformer";
    width = SCREEN_WIDTH;
    height = SCREEN_HEIGHT;
    background = "blue_sky.png";
}

// Create the player character
CREATE hero AS PLAYER {
    position = [100, 400];
    size = [32, 64];
    speed = 5;
    jumpPower = 15;
    health = 100;
    sprite = "hero.png";
}

// Create some platforms
CREATE ground AS PLATFORM {
    position = [0, 550];
    size = [800, 50];
    solid = true;
    movable = false;
}

CREATE platform1 AS PLATFORM {
    position = [200, 450];
    size = [100, 20];
    solid = true;
    movable = false;
}

CREATE platform2 AS PLATFORM {
    position = [350, 350];
    size = [100, 20];
    solid = true;
    movable = true;
    moveSpeed = 2;
    moveDistance = 100;
}

// Create an enemy
CREATE badGuy AS ENEMY {
    position = [500, 500];
    size = [40, 40];
    speed = 2;
    health = 50;
    damage = 10;
    behavior = "patrol";
    patrolDistance = 150;
    sprite = "enemy.png";
}

// Create a collectible item
CREATE coin AS ITEM {
    position = [350, 300];
    size = [20, 20];
    value = 10;
    collectible = true;
    sprite = "coin.png";
}

// Define a function to calculate score
FUNCTION calculateScore(coinsCollected, timeRemaining) {
    RETURN coinsCollected * 10 + timeRemaining;
}

// Handle player movement
FUNCTION updatePlayerPosition() {
    // Apply gravity
    hero.velocity.y += GRAVITY;
    
    // Check keyboard input
    IF INPUT.keyPressed("RIGHT") THEN
        hero.position.x += hero.speed;
    ENDIF
    
    IF INPUT.keyPressed("LEFT") THEN
        hero.position.x -= hero.speed;
    ENDIF
    
    IF INPUT.keyPressed("SPACE") && hero.onGround THEN
        hero.velocity.y = -hero.jumpPower;
        hero.onGround = false;
    ENDIF
    
    // Update position based on velocity
    hero.position.x += hero.velocity.x;
    hero.position.y += hero.velocity.y;
}

// Collision handlers
ON COLLISION(hero, ground) {
    hero.onGround = true;
    hero.velocity.y = 0;
}

ON COLLISION(hero, platform1) {
    hero.onGround = true;
    hero.velocity.y = 0;
}

ON COLLISION(hero, platform2) {
    hero.onGround = true;
    hero.velocity.y = 0;
}

ON COLLISION(hero, badGuy) {
    hero.health -= badGuy.damage;
    PRINT("Ouch! Health remaining: " + hero.health);
    
    IF hero.health <= 0 THEN
        GAME.end("Game Over!");
    ENDIF
}

ON COLLISION(hero, coin) {
    GAME.score += coin.value;
    PRINT("Coin collected! Score: " + GAME.score);
    coin.destroy();
}

// Game initialization
FUNCTION initGame() {
    GAME.score = 0;
    hero.onGround = false;
    hero.velocity = [0, 0];
    PRINT("Game initialized! Collect coins and avoid enemies!");
}

// Game main loop
FUNCTION gameLoop() {
    updatePlayerPosition();
    
    // Update enemy behavior
    badGuy.update();
    
    // Update moving platforms
    platform2.update();
    
    // Check win condition
    IF GAME.score >= 100 THEN
        GAME.end("You Win!");
    ENDIF
}

// Start the game
START {
    initGame();
    GAME.setMainLoop(gameLoop);
}